name: Build Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build macOS ${{ matrix.arch }} binary
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            pyinstaller --onefile \
              --name disk_analyzer_macos_arm64 \
              --target-arch arm64 \
              disk_analyzer.py
          else
            pyinstaller --onefile \
              --name disk_analyzer_macos_x86_64 \
              --target-arch x86_64 \
              disk_analyzer.py
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: disk_analyzer_macos_${{ matrix.arch }}
          path: dist/disk_analyzer_macos_*

  build-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Linux binary
        run: |
          pyinstaller --onefile \
            --name disk_analyzer_linux_x86_64 \
            disk_analyzer.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: disk_analyzer_linux_x86_64
          path: dist/disk_analyzer_linux_x86_64

  build-windows:
    name: Build Windows Binary
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Windows binary
        run: |
          pyinstaller --onefile `
            --name disk_analyzer_windows `
            disk_analyzer.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: disk_analyzer_windows
          path: dist/disk_analyzer_windows.exe

  create-release:
    name: Create Release
    needs: [build-macos, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
